# Main Menu
export t_title_main="Main Menu"
export t_title_choose="Choose project:"
export t_title_delete="Delete Projects:"
export t_title_extract="Extract Options:"
export t_menu_create="Create new project"
export t_menu_choose="Choose a different project"
export t_menu_delete="Delete a project"
export t_menu_extract="Extract for new ROM"
export t_menu_updates="Check for updates"
export t_menu_misc="Misc Tools"
export t_menu_boot_recovery="Boot/Recovery Tools"
export t_menu_rom_tools="ROM Tools Menu"
export t_menu_new="New Project"
export t_menu_quit="Quit"
export t_menu_back="Back"

# ROM Tools Menu
export t_menu_deodex="Deodex ROM"
export t_menu_perm_type="Change perm type"
export t_menu_root="Root Menu"
export t_menu_asserts="Asserts Menu"
export t_menu_extra_dir="Extra Directory Menu"
export t_menu_rom_debloat="Debloat Menu"
export t_menu_build_menu="Build Menu"

# Startup
export t_startup_project="CURRENT PROJECT:"
export t_startup_version="ANDROID VERSION:"
export t_startup_no_root="The kitchen should not be run as root"
export t_startup_shell_error="${redb}${yellowt}${bold}SHELL ERROR:$normal\nBash is required to use this kitchen.\nThe kitchen is currently running in $SHELL."
export t_startup_dep_check="Checking dependencies ..."
export t_startup_dep_missing="${redb}${yellowt}${bold}MISSING DEPENDENCY:$normal\nThe following dependencies are missing:$normal"
export t_startup_need_java="${redb}${yellowt}${bold}MISSING DEPENDENCY:$normal\n${redt}You need at least Java 8 to use this kitchen.\n\n${bluet}The following package is recommended:$normal"
export t_startup_sparse_warn="${redb}${yellowt}${bold}WARNING:$normal\n${redt}sparse_dat will not work properly on 32-bit Linux.$normal"
export t_startup_tool_prep="Preparing tools ..."
export t_startup_tool_fail="One or more tools could not be built."
export t_startup_install_info="Installing the following packages may help:"
export t_startup_cygwin_bin="You need to add the following cygwin compatible binaries to"
export t_startup_copy_extract="${redt}Copy your firmware to the following\ndirectory and choose ${bold}option 4$normal ${redt}to extract it:$normal"
export t_startup_title_no_projects="${bluet}CURRENT PROJECT:$normal $redb$yellowt${bold}There are no projects.$normal"
export t_startup_title_no_rom="ANDROID VERSION: ${redt}No ROM"
export t_startup_no_projects="There is no project to work on."
export t_startup_prep_updater_script="Preparing updater-script ..."
export t_startup_no_rom="There is no ROM to work on."

# Build
export t_menu_build_zip="Build full ROM Zip"
export t_menu_sys_img="Build system.img"
export t_menu_sign="Sign existing zip"
export t_donate_menu_custom_id="Custom ro.build.display.id"
export t_menu_custom_zip="Custom zip menu"
export t_build_selinux_error="${redt}Either your kernel does not support selinux, or the\nkitchen can't find what it needs. If you are sure your\ndevice supports selinux, you can copy the file_contexts\nfile from the ramdisk to your 00_project_files directory\nto use this feature.\n\n${bluet}For now, you will need to use set_perm or raw_img.$normal"
export t_build_patient="This may take a while. Please be patient ..."
export t_build_prep_img="Preparing files for img creation ..."
export t_build_need_boot_img="You need a boot.img for this process."
export t_build_check_ziplog="Something went wrong. Check the zip.log for errors."
export t_build_prep_sys_img="Preparing files for system.img creation ..."
export t_build_img_error="There was a problem creating the image."
export t_build_no_zip="There is no zip to sign."
export t_build_cho_zip="Choose zip to sign:"
export t_zipalign_q="Should we zipalign before building the zip?  y/n  "
export t_zipalign="Zipaligning"
export t_zipalign_frame_q="Would you also like to zipalign the apk files in /framework?  y/n  "
export t_donate_bdisplay="What would you like your build display to say?"

# Custom zip
export t_title_cho_cust_zip="Choose custom zip to build:"
export t_menu_fap="framework, app, priv-app"
export t_menu_fapl="framework, app, priv-app, lib"
export t_menu_f="framework"
export t_menu_ap="app, priv-app"
export t_menu_l="lib"
export t_menu_m="media"
export t_cust_meta_prep="Preparing META-INF directory ..."
export t_cust_no_app_priv="There is no app or priv-app directory in"
export t_cust_not_exist="One or more directories you want to zip do not exist."
export t_cust_frame_not_exist="The framework directory does not exist in"
export t_cust_lib_not_exist="The lib directory does not exist in"
export t_cust_media_not_exist="The media directory does not exist in"
export t_cust_dir_info="Make sure you have at least one of the following in"
export t_cust_file_check="Make sure you have system, META-INF, and boot.img in"
export t_cust_prep="Preparing files ..."
export t_cust_convert_binary_q="Would you like to convert your updater-script\nto an update-binary?  y/n  "
export t_cust_convert_binary="Converting updater-script to update-binary ..."

# Debloat
export t_menu_debloat="Debloat ROM"
export t_menu_debloat_cust="Custom Debloat"
export t_menu_debloat_knox="Remove Samsung Knox"
export t_menu_debloat_restore="Restore Bloat/Knox"
export t_menu_debloat_refresh="Refresh Bloat Status"
export t_bloat_status="Determining bloat status ..."
export t_bloat_already_debloated="This ROM is already debloated"
export t_bloat_rem="Removing bloat ..."
export t_bloat_moved="Bloat has been moved to:"
export t_bloat_cust_info="Add content to the following file to use this feature:"
export t_bloat_knox_not_exist="Knox is not present in this ROM"
export t_bloat_knox_rem="Removing knox ..."
export t_bloat_knox_moved="Knox has been moved to:"
export t_bloat_no_files_restore="There are no files to restore"
export t_bloat_restore="Restoring bloat ..."
export t_bloat_has_restored="The bloat has been restored."
export t_bloat_no_restore="There is nothing to restore."
export t_bloat_q="Would you like to debloat your ROM?  y/n  "
export t_bloat_knoz_rem_q="Would you like remove Knox?  y/n  "
export t_bloat_restore_q="Would you like to restore bloat?  y/n  "
export t_debloated="Debloated"
export t_bloated="Bloated"
export t_bloat_dir_emply="/tools/root/bloat_custom is EMPTY"

# Root
export t_title_cho_root_zip="Choose Root Zip:"
export t_menu_root_method="Which root method would you like?"
export t_menu_supersucho="Let SuperSU decide"
export t_menu_system_install="System install (SYSTEMLESS=false)"
export t_menu_inject="Inject sepolicy changes and system install"
export t_menu_download_inject="Download/Install inject-sepolicy-addon"
export t_menu_root_unroot="Root/Unroot ROM"
export t_menu_busybox="Busybox Add/Remove"
export t_menu_add_remove_sud="Add/Remove su.d support"
export t_root_already="You already have root."
export t_root_must_add="You must add root first."
export t_busybox_already="You already have Busybox."
export t_root_q="Should we root the ROM?  y/n  "
export t_busybox_q="Should we add Busybox to the ROM?  y/n  "
export t_root_sud_add_q="Would you like to add su.d to your rom?  y/n  "
export t_root_sud_rem_q="Would you like to remove su.d support?  y/n  "

# General
export t_general_remove_q="Should we remove it?  y/n  "
export t_general_continue_q="Would you like to continue?  y/n  "
export t_general_cont_anyway_q="Would you like to continue anyway?  y/n  "
export t_general_extracting="Extracting"
export t_general_create="has been created in"
export t_general_build="is building in"

# Status
export t_none="None"
export t_enabled="Enabled"
export t_disabled="Disabled"
export t_add_support="Add Support"
export t_yes="Yes"
export t_no="No"
export t_secure="Secure"
export t_insecure="Insecure"
export t_no_knox="No Knox"
export t_knox="Knox exists"
export t_deodexed="Deodexed"
export t_odexed="Odexed"
export t_rooted="Rooted"
export t_no_root="No Root"

# Boot/Recovery Tools
export t_title_boot="Boot/Recovery Tools Menu"
export t_title_cho_boot="Choose boot or recovery img"
export t_title_unpack="Unpack for more options"
export t_title_current="CURRENT: "
export t_title_bumped="BUMPED: "
export t_menu_pack_boot="Pack"
export t_menu_pack_boot_d="(delete ramdisk work directory)"
export t_menu_pack_boot_k="(keep ramdisk work directory)"
export t_menu_initd="Add/Remove init.d support"
export t_menu_insecure="Insecure/Secure the boot.img"
export t_menu_dmverity="Remove dm-verity"
export t_menu_forcee="Add/Remove forceencrypt"
export t_menu_unpack="Unpack"
export t_menu_boot_flashable="Build flashable"
export t_menu_switch_boot="Switch between boot/recovery"
export t_boot_dmverity="Removing dm-verity ..."
export t_boot_forcee_rem_ask="Would you like to remove forecencrypt?  y/n  "
export t_boot_forcee_add_ask="Would you like to add forecencrypt?  y/n  "
export t_boot_rem_forcee="Removing forceencrypt ..."
export t_boot_forsee_rem="forceencrypt has been removed."
export t_boot_add_forcee="Adding forceencrypt ..."
export t_boot_forcee_add="forceencrypt has been added."
export t_boot_warn="This feature is only for boot.img"
export t_boot_initd_add="init.d support has been added"
export t_boot_already_initd="You already have init.d support"
export t_boot_initd_rem_q="Should we attempt to remove it?  y/n  "
export t_boot_initd_cant="init.d cannot be fully removed by the kitchen."
export t_boot_initd_rem="init.d has been removed."
export t_boot_insecure="The boot.img is now insecure"
export t_boot_already_insecure="The boot.img is already insecure"
export t_boot_secure_ask="Should we attempt to secure it?  y/n  "
export t_boot_secure="The boot.img is now secure"
export t_boot_repack="Repacking"
export t_boot_repack_problem="There was a problem repacking your"
export t_boot_no_comp="Compression method can't be determined."
export t_boot_no_ramdisk="There is no ramdisk."
export t_boot_packed_d="packed, ramdisk deleted."
export t_boot_packed_k="packed, ramdisk remains."
export t_boot_bump_rename="renamed bumped.img to"
export t_boot_status="Checking status ..."
export t_boot_and_ver_problem="The Android version can't be determined. Please extract\nyour Android system, or add the matching build.prop to\nthe rom directory and try again."
export t_boot_already_dmverity="dm-verity is already disabled."
export t_boot_dmverity_rem="dm-verity has been removed."
export t_boot_no_img="There is no boot.img or recovery.img in"
export t_boot_prop_warn="Please copy a build.prop to the project directory and try again."
export t_boot_prep_build="Preparing to build ..."
export t_boot_unpack="Unpacking"
export t_boot_unpack_problem="There was a problem unpacking your"
export t_boot_need_img="You need an img for this process."
export t_boot_unpack_elf="Unpacking kernel.elf ..."

# Misc Tools Menu
export t_title_misc="Misc Tools Menu"
export t_menu_plugin="Run a plugin"
export t_menu_zip_devices="Zip new devices to share"
export t_menu_language="Reset language"

# Asserts
export t_menu_add_assert="Add/Remove Device"
export t_menu_asserts_custom="Add Custom assert"
export t_menu_asserts_reset="Reset asserts to default"
export t_asserts_no_assert="There is no assert to ammend."
export t_asserts_current="${bluet}CURRENT DEVICE ASSERTS: "
export t_asserts_enter="$redb$yellowt${bold}WARNING:$normal\n${redt}Device asserts allow/deny the flashing of ROMs. If you\nallow a ROM to be flashed on the wrong device it can\nhave serious consequences. You have been warned :)$normal\n\nPlease enter the comma separated device asserts. The\ncurrent device should already be in the list but make\nsure it is. Press ENTER when finished.\n\n${greenb}EXAMPLE:$normal"
export t_asserts_prep="Preparing device asserts ..."
export t_asserts_type="Type your custom assert below. Press ENTER when finished.\n\n${greenb}EXAMPLE:$normal"
export t_asserts_prep_cust="Preparing custom assert ..."

# Extra Directory
export t_menu_data="/data/app"
export t_menu_cust_dir="Custom"
export t_menu_cctr="${redt}Not active"
export t_extra_data_added="/data/app support has been added. Place apps in:"
export t_extra_already_data="${greent}You already have /data/app support.\n\n${bluet}The /data directory in your project will remain.$normal\n\nShould we remove it?  y/n"
export t_extra_data_rem="/data/app support has been removed"
export t_extra_cust_name="Type the name of the custom directory and the location\nwhere it should be flashed, then press ENTER."
export t_extra_cust_setup="Setting up"
export t_extra_cust_add="support has been added"
export t_extra_data="Data perm type:"
export t_extra_data_q="Would you like to add /data/app support?  y/n  "
export t_extra_data_perm="Please choose /data perm type: "

# Selection
export t_select="Make your selection:  "
export t_select_enter="Make your selection and press ENTER:  "

# Notices
export t_example="EXAMPLE:"
export t_warning="WARNING:"
export t_notice="NOTICE:"
export t_missing="MISSING FILES:"
export t_current="CURRENT"
export t_error="ERROR:"
export t_error_mess="Something went wrong."

# Press ENTER
export t_enter_rom_tools="Press ENTER to return to ROM Tools menu"
export t_enter_continue="Press ENTER to continue"
export t_enter_main_menu="Press ENTER to return to the Main Menu"
export t_enter_boot_menu="Press ENTER to return to the Boot/Recovery Tools menu"
export t_enter_build_zip_menu="Press ENTER to return to the Build zip menu"
export t_enter_build_menu="Press ENTER to return to the Build Menu"
export t_enter_change_perm_menu="Press ENTER to return to Change Perm menu"
export t_enter_debloat_menu="Press ENTER to return to the Debloat Menu"
export t_enter_extra_dir_menu="Press ENTER to return to Extra Directory Menu"
export t_enter_cho_another_detection="Press ENTER to choose another detection method"
export t_enter_ready="Press ENTER when ready"
export t_enter_kitchen_updater="Press ENTER to return to Kitchen updater"
export t_enter_misc_tools_menu="Press ENTER to return to the Misc Tools menu"
export t_enter_continue_extracting="Press ENTER to continue extracting"
export t_enter_try_again="Press ENTER to try again"
export t_enter_root_menu="Press ENTER to return to the Root Menu"
export t_enter_continue_rest="Press ENTER to continue the rest of the process"
export t_enter_exit="Press ENTER to exit"

# AutoROM
export t_donate_autorom_q="Would you like to use AutoROM?  y/n  "
export t_donate_autorom="Setting up AutoROM ..."

# Perm Type
export t_perm_title="Change/Choose Perm Menu"
export t_perm_set_metadata_cur="set_metadata"
export t_perm_set_metadata="set_metadata (For KitKat+)"
export t_perm_set_perm="set_perm"
export t_perm_sparse="Sparse dat"
export t_perm_sparse_red="Sparse dat (For 64bit Linux and Lollipop+ only)"
export t_perm_raw_img="raw_img"
export t_perm_check_symlinks="Checking symlinks ..."
export t_perm_no_symlinks="The kitchen can't find any symlinks. The ROM will not work correctly."
export t_perm_set_metadata_error="This ROM is NOT KitKat+"
export t_perm_sparse_error="This ROM is NOT Lollipop+ or you are running 32bit Linux."
export t_perm_changing_perm="Changing perm type ..."
export t_perm_which="Which perm type would you like to use?"

# Delete Project
export t_delete_no_project="There are no projects to delete."
export t_delete_has_been="has been deleted."
export t_delete_q="Should we delete the project above?  y/n  "

# Deodex
export t_deodex_copy_frame_prop="You must copy the framework directory and build.prop\nfrom your ROM into"
export t_deodex_no_odex="There are no odex files in this rom."
export t_deodex_no_boot_oat="There is no boot.oat in this rom. It cannot be deodexed."
export t_deodex_disclaimer="Deodexing ROMs may or may not work. You may get\nerrors, it may not boot, or both. I am aware of\nthe problems. Unless you know how to fix them,\nplease do not post about it. Thanks :)"
export t_deodex_use_method="Which deodex method should we use?"
export t_deodex_oat2dex_ver="Which oat2dex version should we use?"
export t_deodex_oat2dex_official="Official v0.86"
export t_deodex_oat2dex_latest="Latest commit built from source"
export t_deodex_need_64_bit="You need 64-bit Linux to use this feature"
export t_deodex_need_oatdump="You need oatdump to continue."
export t_deodex_oatdump_dl_m="(approximately 105MB download)"
export t_deodex_dl_install="Downloading/Installing now ..."
export t_deodex_oatdump_dl_failed="The oatdump download failed."
export t_deodex_oatdump_dl_install_failed="The oatdump download/install failed."
export t_deodex_oatdump_dl_n="(approximately 70MB download)"
export t_deodex_no_api="The Android version could not be detected."
export t_deodex_config_arch="Configure the arch of your device.\n\nHINT:\nCheck the framework directory, you should see\nanother directory inside. The name of it should go\nhere (ex. arm, arm64, x86).\n\nIf you can't get past this part, check the\nfollowing:\n\n1. Make sure you typed the arch variable correctly.\n2. Make sure your rom is not already deodexed.\n\nType the arch of your device and press ENTER."
export t_deodex_extract_txt="Extracting odex files ..."
export t_deodex_extract="... Extracting"
export t_deodex_move="Moving extra apps ..."
export t_deodex_deop="Deoptimizing boot.oat ..."
export t_deodex_start_app="Start deodexing /system/app ..."
export t_deodex_start_priv="Start deodexing /system/priv-app ..."
export t_deodex_start_frame="Start deodexing /system/framework ..."
export t_deodex_deodexing="... Deodexing"
export t_deodex_fail="Failed ..."
export t_deodex_app_already="is already deodexed ..."
export t_deodex_clean="Cleaning up ..."
export t_deodex_complete="Deodexing complete"
export t_deodex_remain="The following odex files are still in your ROM"
export t_deodex_method="METHOD:"
export t_deodex_problems="${redt}There were problems deodexing some of your ROM.$normal\nThe following file shows where the issues occurred:"
export t_deodex_try_smali="${bluet}NOTE: If you say NO below, you can try smali/baksmali\nmethod on the remaining files$normal"
export t_deodex_api="API LEVEL: "
export t_deodex_arch="ARCH: "
export t_deodex_arch2="ARCH2: "
export t_deodex_no_frame_odex="not found, skipping ..."
export t_deodex_move_odex="Moving odex files ..."
export t_deodex_try_anyway="Would you like to try anyway?  y/n  "
export t_deodex_dl_q="Would you like to download/install it now?  y/n  "
export t_deodex_continue_q="Would you like to continue deodexing?  y/n  "
export t_deodex_del_frame_q="Would you like to delete framework odex files anyway?  y/n  "
export t_deodex_del_meta_inf_q="${bluet}Android Nougat uses APK Signature Scheme v2, and\nthis can cause problems when deodexing. Deleting\nMETA-INF from the apk files should fix this problem.$normal\n\nWould you like to delete the META-INF directory from\nall the apk files in your ROM?  y/n  "
export t_deodex_del_meta_inf="Deleting META-INF from apk's ..."
export t_deodex_pack_jar="Packing dex into jar files ..."

# Dependencies
export t_dep_install_q="Would you like to install now?  y/n  "
export t_dep_install="Installing dependencies ..."

# Extract
export t_extract_no_project="There are no projects to extract from."
export t_extract_title="Extract Menu"
export t_extract_no_files_message="1) Add a ROM zip, tar/boot.img, system.img/boot.img, or\n   win/boot.win then choose this option.\n2) Pull system, vendor, boot, and recovery images from your\n   ${redt}${bold}rooted$normal device OR from custom recovery for extraction."
export t_extract_cho_option="$yellowb${redt}Choose option to extract images$normal\n\n${bluet}**If you get an error, you can try the other option**$normal\n\n1) My device is booted to custom recovery (${redt}stock will not work$normal)\n2) My device is booted to Android (${redt}must be rooted$normal)"
export t_extract_plug="** Plug in your device"
export t_extract_detect_part="Detecting partition info ..."
export t_extract_check_space="Checking for free space ..."
export t_extract_space_error="The kitchen could not determine your free space."
export t_extract_space_info="Available device free space for the images:"
export t_extract_pull_error="Something went wrong. Most likely you lack permission to\npull images from your device, or you don't have enough\nspace on your device to store the images."
export t_extract_prep="Preparing to extract ..."
export t_extract_zip_fail="This zip does not contain anything the kitchen\ncan extract."
export t_extract_zip="Extracting zip ..."
export t_extract_dat="Extracting system.new.dat, system.transfer.list, and boot.img ..."
export t_extract_convert_sys="Converting to system.img ..."
export t_extract_convert_ven="Converting to vendor.img ..."
export t_extract_img_from_zip="Extracting images from zip ..."
export t_extract_tar_boot="Extracting system.ext4.tar.a and boot.img ..."
export t_extract_img="Extracting images ..."
export t_extract_fail="Something went wrong wiith the extraction."
export t_extract_tar_md5="Extracting tar.md5 files ..."
export t_extract_chunk="Extracting sparsechunks and boot.img ..."
export t_extract_convert_chunk="Converting sparse chunks to system.img ..."
export t_extract_general="Extracting to"
export t_extract_check_firm="Checking firmware package ..."
export t_extract_tgz_fail="The tgz file does not appear to be\nofficial Nexus firmware."
export t_extract_files="Extracting files ..."
export t_extract_md5_fail="There is no system.img.ext4 in your tar.md5 file"
export t_extract_tar_fail="Looks like the tar file you have is not from a nandroid backup"
export t_extract_tar="Extracting name"
export t_extract_cache_extract_q="Would you like to extract ${yellowt}cache.img$normal?  y/n  "
export t_extract_cache_include_q="Would you like to include the files from cache.img\nin your rom?  y/n  "
export t_extract_cache="Including cache.img files ..."
export t_extract_vendor_extract_q="Would you like to extract ${yellowt}vendor.img$normal?  y/n  "
export t_extract_vendor_include_q="Would you like to include the files from vendor.img\nin your rom?  y/n  "
export t_extract_rom_fail="There was a problem extracting your ROM."
export t_extract_cho_part_detect="Choose partition detection method for"
export t_extract_adb_shell="Device through adb shell"
export t_extract_project_dir="Project directory (BETA):"
export t_extract_manual="Enter manually"
export t_extract_detect="Determining partition size for"
export t_extract_beta="${redt}This feature is in BETA. It may not flash properly.\nYou may get an error like the following:\n\n${yellowt}blkdiscard failed: Invalid argument\n\n${redt}You can change perms to set_metadata or set_perm to\navoid using this feature$normal"
export t_extract_manual_bytes="Enter partition size in bytes for"
export t_extract_detect_fail="partition size is empty. Please try again."
export t_extract_sparse_convert="Checking/Converting if sparse ..."
export t_extract_img_fail="There is no"
export t_extract_mount_e="Mounting"
export t_extract_copy_e="Copying files to"
export t_extract_moved_old_rom="The following have been moved to:"
export t_extract_q="Should we extract"
export t_extract_q2="to the current project?  y/n  "

# by-name
export t_byname_how_to_get_q="How would you like to get your partition info?"
export t_menu_byname_detect_boot="Detect by-name from boot/recovery images (recommended)"
export t_menu_byname_detect_device="Detect by-name from your device"
export t_menu_byname_detect_manual="Enter by-name manually"
export t_menu_byname_detect_mmc="Detect mmcblk partitions from recovery.img"
export t_byname_usb_debug="${bluet}** Enable usb debugging on your Android device in system settings\n** Plug in your device$normal"
export t_byname_usb_debug_root="$redb${yellowt}This operation requires root.$normal\n${redt}You may need to agree to allow root on your device.$normal"
export t_byname_error_device="by-name could not be detected from your device.\nTry detecting mmc partitions from recovery.img"
export t_byname_error_wrong_device="The device you are detecting is not the same\nas the one in your project. Please connect\nthe correct device and try again."
export t_byname_no_boot="Please copy a boot.img, recovery.img, or kernel.elf to the\nproject directory and try again."
export t_byname_which_img_q="Which image should we use?"
export t_byname_detect_boot="Detecting by-name from boot.img ..."
export t_byname_detect_recovery="Detecting by-name from recovery.img ..."
export t_byname_detect_elf="Detecting by-name from kernel.elf ..."
export t_byname_no_files="You need a boot.img, recovery.img, or kernel.elf for this process."
export t_byname_boot_fail="by-name could not be detected."
export t_byname_try_recovery="Try detecting mmc partitions from recovery.img"
export t_byname_detect_manual="Please enter your by-name directory and press ENTER"
export t_byname_no_byname="by-name directory is empty."
export t_byname_create_mmc="Creating mmc from recovery.img ..."
export t_byname_need_recovery="You need a recovery.img for this process."
export t_byname_no_mmc="The kitchen can't find the mmc blocks."
export t_byname_recovery_fail="mmc could not be detected from the recovery.img."
export t_byname_try_boot="Try detecting by-name partitions from boot.img"
export t_byname_manual_info="You will need to enter the partition info in the\nupdater-script manually."

# Signature
export t_sig_info="${bluet}The answer to this question will show when flashing\nthe zip and will be converted into the zip name when\nthe zip is built.$normal\n\nWhat is the name of your zip?"
export t_donate_sig_cust="${bluet}This one will show below the zip name when flashing where\nthe standard version said Built with SuperR's Kitchen.$normal\n\nWhat is your signature?"

# Zip devices
export t_zipdev_info="This option will zip new devices in your kitchen.\nIt will create a zip in the following location:"
export t_zipdev_building="Building devices zip ..."
export t_zipdev_finished="The devices zip has been created:"
export t_zipdev_upload="Please upload it to the forum so the new devices\ncan be added to the database for others to use."
export t_zipdev_no_new="There are no new devices in the devices directory."

# WSL Warning
export t_wsl_warn="You may not be able to mount/extract images\nwhile running in Windows Subsystem for Linux (WSL).\nThere may be unexpected results"

# Binary install
export t_binary_note="NOTE: You should only install the binaries if you can't get the\n      kitchen to build them. It is recommended to have the kitchen\n      build the binaries if possible"
export t_binary_osbit_installing="Installing binaries for"
export t_binary_osbit_installed="binaries have been installed"
export t_binary_cygwin_installing="Installing cygwin binaries ..."
export t_binary_cygwin_installed="cygwin binaries have been installed"
export t_binary_q="Would you like to install the binaries anyway?  y/n  "
export t_binary_cygwin_q="Would you like to install the cygwin binaries now?  y/n  "

# Kitchen updater
export t_update_check_kitchen="Checking for updates ..."
export t_update_down="The file server must be down temporarily.\nPlease try again later."
export t_update_update_avail="An update is available"
export t_update_update_cv="CURRENT VERSION:"
export t_update_update_nv="NEW VERSION:"
export t_update_update_now="Update now"
export t_update_update_view="View changelog"
export t_update_changelog="Changelog (last 3 versions):"
export t_update_updating="Updating ..."
export t_update_finished="SuperR's Kitchen has been updated"
export t_update_no_git="Could not find .git in your kitchen directory.\nThe kitchen must be git cloned to use this updater."
export t_update_already="SuperR's Kitchen is already up to date"
export t_update_check_launcher="Checking for Kitchen Launcher updates ..."
export t_update_launcher_avail="${greenb}Launcher update available$normal"
export t_update_launcher_cv="${bluet}CURRENT VERSION:"
export t_update_launcher_nv="${bluet}NEW VERSION:"
export t_update_launcher_finished="Installer/Launcher has been updated"
export t_update_problem_download="There was a problem downloading the update."
export t_update_no_internet="The Kitchen could not detect an internet connection."
export t_update_q="Would you like to update now?  y/n  "
export t_update_auto_q="Do you want to check for updates when the kitchen starts?  y/n  "

# New Project
export t_new_q="Enter new project name (${yellowt}spaces will be replaced with _$normal):"
export t_new_already="You already have a project with that name"

# Plugin
export t_donate_plugin_cho="Choose Plugin:"
export t_donate_plugin_error="Plugin scripts must be in a directory named the same\nas the plugin script."

# Sign
export t_sign_ram_check="Checking ram ..."
export t_sign_no_ram="You may not have enough ram to sign this zip."
export t_sign_signing="Signing"
export t_sign_signed="has been created. Enjoy!"
export t_sign_fail="Something went wrong with the signing."
export t_sign_q="Would you like to sign the zip?  y/n  "

# Build img
export t_img_add="Adding"
export t_img_flash_fail="The flashable will not work because there\nis no partition info for"
export t_img_create_dat="Creating sparse dat image for"
export t_img_create_symlinks="Creating symlinks for"
export t_img_create_raw="Creating"
export t_img_fail="${redt}Something went wrong building the image.\n\n${bluet}Make sure your partition size is correct and\nthat the directory is not too big to fit.$normal"
export t_img_flash_fail2="The flashable will not work because there is no\npartition info. Please create a device directory or enter the\ninfo manually after the zip is created"
export t_img_sparse_q="What type of system.img should we create?"

# Language
export t_title_cho_lang="Choose language:"
export t_reset_language="Language has been reset. Changes will be made\nthe next time you start the kitchen"
export t_checking_language="Checking language file"
export t_lang_added="New English language elements have been added to"
export t_lang_translate="Make sure you translate them."
